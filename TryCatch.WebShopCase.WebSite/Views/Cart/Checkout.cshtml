@model TryCatch.WebShopCase.WebSite.Models.CheckoutConfirmationModel

@{
    ViewBag.Title = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Checkout</h2>
<div ng-controller="cartController">
    @using (Html.BeginForm())
    {
        <div class="row">

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-horizontal">
                <h4>Customer information</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Title, new SelectList(Model.TitleOptions, "Value", "Text"), htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HouseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group pull-right">
                    @Html.ActionLink("Back to Cart", "Index", null, new { @class = "btn btn-warning" })
                    <input type="submit" class="btn btn-primary value=" save" />
                </div>
            </div>

        </div>

        <div class="row">
            <h4>Cart summary</h4>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_Product</th>
                        <th>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_Amount</th>
                        <th>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_SubTotal</th>
                        <th>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_Vat</th>
                        <th>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_Total</th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-show="!currentOrderLines || currentOrderLines.length == 0">
                        <td>
                            <strong>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_EmptyCart</strong>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>

                    </tr>
                    <tr ng-repeat="orderLine in currentOrderLines">
                        <td>
                            <input type="hidden" name="OrderLines[{{$index}}].ProductId" value="{{orderLine.product.Id}}" />
                            <input type="hidden" name="OrderLines[{{$index}}].Amount" value="{{orderLine.amount}}" />
                            {{orderLine.product.Name}}
                        </td>
                        <td>{{orderLine.amount}}</td>
                        <td>{{orderLine.product.Price}} </td>
                        <td>{{orderLine.product.VatPercentage}} </td>
                        <td>{{getTotalForOrderLine(orderLine)}} </td>
                    </tr>
                </tbody>
            </table>
            <div class="panel  panel-info pull-right ">
                <div class="panel-heading text-center">
                    <i class="fa fa-shopping-cart"></i> <h5>Summary</h5>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <strong>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_SubTotal: </strong>
                        </div>
                        <div class="col-md-6">
                            {{getSubTotalForOrder()}} €
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_Vat: </strong>
                        </div>
                        <div class="col-md-6">
                            {{getVatForOrder()}} €
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>@TryCatch.WebShopCase.WebSite.Resources.Resources.Display_GeneralView_Total: </strong>
                        </div>
                        <div class="col-md-6">
                            <strong>{{getTotalForOrder()}} €</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/cartScripts")
}
